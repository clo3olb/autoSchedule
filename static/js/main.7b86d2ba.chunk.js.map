{"version":3,"sources":["hooks/useStyles.ts","components/Header.tsx","components/HelpDialog.tsx","components/TextInput.tsx","components/IconButtonWithTooltip.tsx","hooks/useLocalStorage.ts","components/TextInputs.tsx","components/DurationInput.tsx","routes/Input.tsx","routes/Main.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","app","minHeight","backgroundColor","header","width","palette","background","paper","padding","spacing","pageContainer","flexGrow","container","stageTitle","marginBottom","title","display","box","alignItems","Header","classes","React","useState","activeStep","setActiveStep","steps","AppBar","position","className","Container","Grid","style","paddingLeft","paddingRight","paddingBottom","justify","Typography","variant","color","Button","onClick","prevActiveStep","length","Stepper","map","label","Step","StepLabel","HelpDialog","open","handleClose","text","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","input","TextInput","value","index","setName","Grow","in","item","TextField","onChange","event","target","InputProps","startAdornment","InputAdornment","IconButtonWithTooltip","icon","Tooltip","IconButton","size","aria-label","useLocalStorage","dataKey","LS","window","localStorage","get","getItem","JSON","parse","console","error","set","setItem","stringify","remove","removeItem","clear","TextInputs","min","description","log","warning","setWarning","helpOpen","setHelpOpen","localData","Array","fill","values","setValues","onWarningClose","setNameByIndex","prev","i","useEffect","Paper","elevation","direction","Box","slice","from","Snackbar","autoHideDuration","Alert","severity","DurationInput","Date","start","setStart","end","setEnd","localDataStart","localDataEnd","utils","DateFnsUtils","locale","koLocale","DatePicker","disablePast","maxDate","date","animateYearScrolling","minDate","Input","Main","maxWidth","createMuiTheme","typography","fontFamily","App","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b86d2ba.chunk.js","sourcesContent":["import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    app: {\n      minHeight: \"100vh\",\n      backgroundColor: \"#f0f0f0\",\n    },\n    header: {\n      width: \"100%\",\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1),\n    },\n    pageContainer: {\n      padding: theme.spacing(2),\n      flexGrow: 1,\n    },\n\n    container: {\n      flexGrow: 1,\n      padding: theme.spacing(2),\n    },\n    stageTitle: {\n      marginBottom: theme.spacing(2),\n    },\n    padding: {\n      padding: theme.spacing(2),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      flexGrow: 1,\n    },\n    title: {\n      display: \"inline-block\",\n      flexGrow: 1,\n    },\n    box: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  })\n)\n\nexport default useStyles\n","import React from \"react\"\nimport { Box, Stepper, Step, StepLabel, Button, Typography, Grid, Container, AppBar } from \"@material-ui/core\"\nimport useStyles from \"hooks/useStyles\"\n\nconst Header = () => {\n  const classes = useStyles()\n  const [activeStep, setActiveStep] = React.useState(0)\n  const steps = [\"기본 정보 입력\", \"근무일 형태지정\", \"근무날짜 지정\", \"근무자 확인\"]\n\n  const handleNext = () => {\n    if (activeStep < steps.length) {\n      setActiveStep((prevActiveStep) => prevActiveStep + 1)\n    }\n  }\n\n  const handleBack = () => {\n    if (activeStep > 0) {\n      setActiveStep((prevActiveStep) => prevActiveStep - 1)\n    }\n  }\n\n  const handleReset = () => {\n    setActiveStep(0)\n  }\n\n  return (\n    <AppBar position=\"sticky\" className={classes.header}>\n      <Container>\n        <Grid\n          container\n          style={{ paddingLeft: 0, paddingRight: 0, paddingBottom: 0 }}\n          alignItems=\"center\"\n          justify=\"space-between\"\n          className={classes.padding}\n        >\n          <Typography variant=\"h6\" className={classes.title} color=\"textPrimary\">\n            AutoSchedule\n          </Typography>\n          <Button onClick={handleBack}>Back</Button>\n          <Button onClick={handleNext} color=\"primary\">\n            Next\n          </Button>\n        </Grid>\n        <Stepper activeStep={activeStep} style={{ paddingLeft: 0, paddingRight: 0 }}>\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n      </Container>\n    </AppBar>\n  )\n}\n\nexport default Header\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface HelpDialogProps {\n  open: boolean;\n  handleClose: () => void;\n  title: string;\n  text: string;\n}\n\nconst HelpDialog = ({ open, handleClose, title, text }: HelpDialogProps) => {\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{text}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\" autoFocus>\n          확인\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\nexport default HelpDialog;\n","import React from \"react\"\nimport { Grid, Grow, InputAdornment, makeStyles, TextField, Theme } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  input: {\n    width: \"100%\",\n  },\n}))\n\ninterface TextInputProps {\n  label: string\n  value: string\n  index: number\n  setName: (index: number, value: string) => void\n}\n\nconst TextInput = ({ label, value, index, setName }: TextInputProps) => {\n  const classes = useStyles()\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(index, event.target.value)\n  }\n  return (\n    <Grow in={true}>\n      <Grid item>\n        <TextField\n          className={classes.input}\n          onChange={onChange}\n          label={label}\n          value={value}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">{index + 1}.&nbsp;</InputAdornment>,\n          }}\n        />\n      </Grid>\n    </Grow>\n  )\n}\n\nexport default TextInput\n","import { IconButton, Tooltip } from \"@material-ui/core\"\nimport React from \"react\"\n\ninterface IconButtonWithTooltipProps {\n  title: string\n  icon: React.ReactNode\n  onClick: () => void\n}\n\nconst IconButtonWithTooltip = ({ title, icon, onClick }: IconButtonWithTooltipProps) => {\n  return (\n    <Tooltip title={title}>\n      <IconButton size=\"small\" onClick={onClick} color=\"primary\" aria-label=\"add\">\n        {icon}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default IconButtonWithTooltip\n","const useLocalStorage = (dataKey: string) => {\n  const LS = window.localStorage\n  const get = () => {\n    const item = LS.getItem(dataKey)\n    if (item !== null) {\n      return JSON.parse(item)\n    }\n    return console.error(`${dataKey} Not Found`)\n  }\n  const set = (value: any) => {\n    LS.setItem(dataKey, JSON.stringify(value))\n  }\n  const remove = () => {\n    LS.removeItem(dataKey)\n  }\n  const clear = () => {\n    LS.clear()\n  }\n  return { get, set, remove, clear }\n}\n\nexport default useLocalStorage\n","import React, { useEffect, useState } from \"react\"\nimport { Box, Grid, Paper, Snackbar, Typography } from \"@material-ui/core\"\nimport Alert from \"@material-ui/lab/Alert\"\n\n// Icons\nimport AddIcon from \"@material-ui/icons/Add\"\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\nimport RemoveIcon from \"@material-ui/icons/Remove\"\n\n// Components\nimport HelpDialog from \"components/HelpDialog\"\nimport TextInput from \"components/TextInput\"\nimport IconButtonWithTooltip from \"components/IconButtonWithTooltip\"\n\n// Hooks\nimport useStyles from \"hooks/useStyles\"\nimport useLocalStorage from \"hooks/useLocalStorage\"\n\ninterface TextInputsProps {\n  min?: number\n  title: string\n  label: string\n  description?: string\n  dataKey: string //Key for localStorage Values\n}\n\nconst TextInputs = ({ min = 1, title, label, description = \"\", dataKey }: TextInputsProps) => {\n  console.log({ min, dataKey, title, label })\n  const classes = useStyles()\n  const [warning, setWarning] = useState(false)\n  const [helpOpen, setHelpOpen] = useState(false)\n  const localData = useLocalStorage(dataKey)\n  const [values, setValues] = useState(Array(min).fill(\"\"))\n  const onWarningClose = (event: React.SyntheticEvent<Element, Event>) => {\n    setWarning(false)\n  }\n\n  const onAddClick = () => {\n    setValues([...values, \"\"])\n  }\n  const onRemoveClick = () => {\n    if (values.length > min) {\n      setValues(values.slice(0, values.length - 1))\n    } else {\n      setWarning(true)\n    }\n  }\n  const onHelpClick = () => {\n    setHelpOpen(true)\n  }\n\n  const setNameByIndex = (index: number, value: string) => {\n    setValues(values.map((prev, i) => (i === index ? value : prev)))\n  }\n  const handleHelpClose = () => {\n    setHelpOpen(false)\n  }\n\n  // For Debug\n  useEffect(() => {\n    console.log(dataKey)\n    console.log(values)\n    localData.set(values)\n  }, [values])\n\n  return (\n    <Paper elevation={3} className={classes.paper}>\n      <Grid container spacing={2} direction=\"column\">\n        <Grid item>\n          <Box className={classes.box}>\n            <Typography variant=\"h6\" className={classes.title}>\n              {title}\n            </Typography>\n            <IconButtonWithTooltip title=\"추가\" onClick={onAddClick} icon={<AddIcon />} />\n            <IconButtonWithTooltip title=\"삭제\" onClick={onRemoveClick} icon={<RemoveIcon />} />\n            <IconButtonWithTooltip title=\"도움말\" onClick={onHelpClick} icon={<HelpOutlineIcon />} />\n            {description && (\n              <HelpDialog open={helpOpen} handleClose={handleHelpClose} title={`${title}`} text={description} />\n            )}\n          </Box>\n        </Grid>\n        {Array.from(values).map((value, index) => (\n          <TextInput key={`name_${index}`} label={label} value={value} setName={setNameByIndex} index={index} />\n        ))}\n      </Grid>\n      <Snackbar open={warning} autoHideDuration={3000} onClose={onWarningClose}>\n        <Alert onClose={onWarningClose} severity=\"warning\" elevation={6} variant=\"filled\">\n          최소 {min}개의 {label}이 필요합니다.\n        </Alert>\n      </Snackbar>\n    </Paper>\n  )\n}\nexport default TextInputs\n","import React, { useEffect, useState } from \"react\"\nimport { Box, Grid, Paper, Typography } from \"@material-ui/core\"\nimport DateFnsUtils from \"@date-io/date-fns\"\nimport koLocale from \"date-fns/locale/ko\"\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\"\nimport { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\"\nimport HelpDialog from \"./HelpDialog\"\n\n//Hooks\nimport useStyles from \"hooks/useStyles\"\n\n// Icon\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\nimport IconButtonWithTooltip from \"components/IconButtonWithTooltip\"\nimport useLocalStorage from \"hooks/useLocalStorage\"\n\ninterface DurationInputProps {\n  dataKey: string\n}\n\nconst DurationInput = ({ dataKey }: DurationInputProps) => {\n  const classes = useStyles()\n  const [helpOpen, setHelpOpen] = useState(false)\n  const [start, setStart] = useState<any>(new Date())\n  const [end, setEnd] = useState<any>(new Date())\n  const localDataStart = useLocalStorage(`${dataKey}Start`)\n  const localDataEnd = useLocalStorage(`${dataKey}End`)\n\n  const onStartChange = (date: MaterialUiPickersDate) => {\n    setStart(date)\n  }\n  const onEndChange = (date: MaterialUiPickersDate) => {\n    setEnd(date)\n  }\n\n  const onHelpClick = () => {\n    setHelpOpen(true)\n  }\n\n  const handleHelpClose = () => {\n    setHelpOpen(false)\n  }\n\n  useEffect(() => {\n    localDataStart.set(start)\n    localDataEnd.set(end)\n  }, [start, end])\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={koLocale}>\n      <Paper elevation={3} className={classes.paper}>\n        <Grid container spacing={2} direction=\"column\">\n          <Grid item>\n            <Box className={classes.box}>\n              <Typography variant=\"h6\" className={classes.title}>\n                기간 입력\n              </Typography>\n              <IconButtonWithTooltip title=\"도움말\" onClick={onHelpClick} icon={<HelpOutlineIcon />} />\n              <HelpDialog\n                open={helpOpen}\n                handleClose={handleHelpClose}\n                title=\"기간 설정\"\n                text=\"시작 날짜와 종료 날짜를 선택합니다. 시작 날짜는 종료 날짜보다 이전이어야 하며, 종료 날짜는 시작 날짜보다 이후여야 합니다.\"\n              />\n            </Box>\n          </Grid>\n          <Grid item>\n            <DatePicker\n              label=\"시작 날짜\"\n              disablePast\n              maxDate={end}\n              value={start}\n              onChange={onStartChange}\n              animateYearScrolling\n            />\n          </Grid>\n          <Grid item>\n            <DatePicker\n              disablePast\n              label=\"종료 날짜\"\n              minDate={start}\n              value={end}\n              onChange={onEndChange}\n              animateYearScrolling\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </MuiPickersUtilsProvider>\n  )\n}\nexport default DurationInput\n","import { Grid } from \"@material-ui/core\"\nimport TextInputs from \"components/TextInputs\"\nimport DurationInput from \"components/DurationInput\"\nimport useStyles from \"hooks/useStyles\"\n\nconst Input = () => {\n  const classes = useStyles()\n\n  return (\n    <Grid container justify=\"center\" spacing={2}>\n      <Grid item className={classes.container}>\n        <TextInputs\n          dataKey={\"names\"}\n          min={2}\n          title=\"근무자 명단\"\n          label=\"이름\"\n          description=\"근무를 하게 될 사람들의 이름 목록입니다.\"\n        />\n      </Grid>\n      <Grid item className={classes.container}>\n        <TextInputs dataKey=\"works\" min={1} title=\"근무 종류\" label=\"근무 명\" description=\"모든 근무를 작성합니다..\" />\n      </Grid>\n      <Grid item className={classes.container}>\n        <TextInputs\n          dataKey=\"dayTypes\"\n          min={1}\n          title=\"근무 형태\"\n          label=\"별명\"\n          description=\"토요일, 일요일과 같이 형식이 다른 형태의 근무일이 있는 경우에 여러 근무형태를 작성합니다. ex) 토요일, 일요일, 공휴일 등\"\n        />\n      </Grid>\n      <Grid item className={classes.container}>\n        <DurationInput dataKey=\"duration\" />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default Input\n","import { Box, Container, Typography } from \"@material-ui/core\"\nimport React from \"react\"\n\nimport Input from \"routes/Input\"\nimport useStyles from \"hooks/useStyles\"\n\n// Main would merge all the stage it needs to provide the AutoSchedule Service.\n\nconst Main = () => {\n  const classes = useStyles()\n  return (\n    <Box className={classes.pageContainer}>\n      <Container maxWidth=\"lg\">\n        {/* Stage 1: getting initial inputs */}\n        <Typography variant=\"h5\" className={classes.stageTitle}>\n          기본 정보 입력\n        </Typography>\n        <Input />\n      </Container>\n    </Box>\n  )\n}\n\nexport default Main\n","import React from \"react\"\nimport Header from \"components/Header\"\nimport { Box, createMuiTheme, Grid, ThemeProvider } from \"@material-ui/core\"\nimport \"styles/styles.scss\"\nimport Main from \"routes/Main\"\nimport useStyles from \"hooks/useStyles\"\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: \"Noto Sans KR, sans-serif\",\n  },\n})\n\nconst App = () => {\n  const classes = useStyles()\n  return (\n    <ThemeProvider theme={theme}>\n      <Box className={classes.app}>\n        <Header />\n        <Main />\n      </Box>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}