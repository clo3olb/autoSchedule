{"version":3,"sources":["hooks/useStyles.ts","components/Header.tsx","components/HelpDialog.tsx","components/TextInput.tsx","components/IconButtonWithTooltip.tsx","hooks/useLocalStorage.ts","components/TextInputs.tsx","components/DurationInput.tsx","routes/Input.tsx","routes/Main.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","container","flexGrow","padding","spacing","paper","title","display","box","alignItems","Header","classes","React","useState","activeStep","setActiveStep","steps","Box","Grid","justify","className","Typography","variant","Button","onClick","prevActiveStep","length","color","Stepper","alternativeLabel","map","label","Step","StepLabel","HelpDialog","open","handleClose","text","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","input","width","TextInput","value","index","setName","Grow","in","item","TextField","onChange","event","target","InputProps","startAdornment","InputAdornment","position","IconButtonWithTooltip","icon","Tooltip","IconButton","size","aria-label","useLocalStorage","dataKey","LS","window","localStorage","get","getItem","JSON","parse","console","error","set","setItem","stringify","remove","removeItem","clear","TextInputs","min","description","log","warning","setWarning","helpOpen","setHelpOpen","localData","Array","fill","values","setValues","onWarningClose","setNameByIndex","prev","i","useEffect","Paper","elevation","direction","slice","from","Snackbar","autoHideDuration","Alert","severity","DurationInput","Date","start","setStart","end","setEnd","localDataStart","localDataEnd","utils","DateFnsUtils","locale","koLocale","DatePicker","disablePast","maxDate","date","animateYearScrolling","minDate","Input","Main","Container","maxWidth","Accordion","expanded","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","Divider","AccordionActions","createMuiTheme","typography","fontFamily","app","backgroundColor","minHeight","App","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfd0f024.chunk.js","sourcesContent":["import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      flexGrow: 1,\n      padding: theme.spacing(2),\n    },\n    padding: {\n      padding: theme.spacing(2),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      flexGrow: 1,\n    },\n    title: {\n      display: \"inline-block\",\n      flexGrow: 1,\n    },\n    box: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  })\n)\n\nexport default useStyles\n","import React from \"react\"\nimport { Box, Stepper, Step, StepLabel, Button, Typography, Grid } from \"@material-ui/core\"\nimport useStyles from \"hooks/useStyles\"\n\nconst Header = () => {\n  const classes = useStyles()\n  const [activeStep, setActiveStep] = React.useState(0)\n  const steps = [\"기본 정보 입력\", \"근무일 형태지정\", \"근무날짜 지정\", \"근무자 확인\"]\n\n  const handleNext = () => {\n    if (activeStep < steps.length) {\n      setActiveStep((prevActiveStep) => prevActiveStep + 1)\n    }\n  }\n\n  const handleBack = () => {\n    if (activeStep > 0) {\n      setActiveStep((prevActiveStep) => prevActiveStep - 1)\n    }\n  }\n\n  const handleReset = () => {\n    setActiveStep(0)\n  }\n\n  return (\n    <Box>\n      <Grid container alignItems=\"center\" justify=\"space-between\" className={classes.padding}>\n        <Typography variant=\"h6\" className={classes.title}>\n          AutoSchedule{activeStep}\n        </Typography>\n        <Button onClick={handleBack}>Back</Button>\n        <Button onClick={handleNext} color=\"primary\">\n          Next\n        </Button>\n      </Grid>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </Box>\n  )\n}\n\nexport default Header\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface HelpDialogProps {\n  open: boolean;\n  handleClose: () => void;\n  title: string;\n  text: string;\n}\n\nconst HelpDialog = ({ open, handleClose, title, text }: HelpDialogProps) => {\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{text}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\" autoFocus>\n          확인\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\nexport default HelpDialog;\n","import React from \"react\"\nimport { Grid, Grow, InputAdornment, makeStyles, TextField, Theme } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  input: {\n    width: \"100%\",\n  },\n}))\n\ninterface TextInputProps {\n  label: string\n  value: string\n  index: number\n  setName: (index: number, value: string) => void\n}\n\nconst TextInput = ({ label, value, index, setName }: TextInputProps) => {\n  const classes = useStyles()\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(index, event.target.value)\n  }\n  return (\n    <Grow in={true}>\n      <Grid item>\n        <TextField\n          className={classes.input}\n          onChange={onChange}\n          label={label}\n          value={value}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">{index + 1}.&nbsp;</InputAdornment>,\n          }}\n        />\n      </Grid>\n    </Grow>\n  )\n}\n\nexport default TextInput\n","import { IconButton, Tooltip } from \"@material-ui/core\"\nimport React from \"react\"\n\ninterface IconButtonWithTooltipProps {\n  title: string\n  icon: React.ReactNode\n  onClick: () => void\n}\n\nconst IconButtonWithTooltip = ({ title, icon, onClick }: IconButtonWithTooltipProps) => {\n  return (\n    <Tooltip title={title}>\n      <IconButton size=\"small\" onClick={onClick} color=\"primary\" aria-label=\"add\">\n        {icon}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default IconButtonWithTooltip\n","const useLocalStorage = (dataKey: string) => {\n  const LS = window.localStorage\n  const get = () => {\n    const item = LS.getItem(dataKey)\n    if (item !== null) {\n      return JSON.parse(item)\n    }\n    return console.error(`${dataKey} Not Found`)\n  }\n  const set = (value: any) => {\n    LS.setItem(dataKey, JSON.stringify(value))\n  }\n  const remove = () => {\n    LS.removeItem(dataKey)\n  }\n  const clear = () => {\n    LS.clear()\n  }\n  return { get, set, remove, clear }\n}\n\nexport default useLocalStorage\n","import React, { useEffect, useState } from \"react\"\nimport { Box, Grid, Paper, Snackbar, Typography } from \"@material-ui/core\"\nimport Alert from \"@material-ui/lab/Alert\"\n\n// Icons\nimport AddIcon from \"@material-ui/icons/Add\"\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\nimport RemoveIcon from \"@material-ui/icons/Remove\"\n\n// Components\nimport HelpDialog from \"components/HelpDialog\"\nimport TextInput from \"components/TextInput\"\nimport IconButtonWithTooltip from \"components/IconButtonWithTooltip\"\n\n// Hooks\nimport useStyles from \"hooks/useStyles\"\nimport useLocalStorage from \"hooks/useLocalStorage\"\n\ninterface TextInputsProps {\n  min?: number\n  title: string\n  label: string\n  description?: string\n  dataKey: string //Key for localStorage Values\n}\n\nconst TextInputs = ({ min = 1, title, label, description = \"\", dataKey }: TextInputsProps) => {\n  console.log({ min, dataKey, title, label })\n  const classes = useStyles()\n  const [warning, setWarning] = useState(false)\n  const [helpOpen, setHelpOpen] = useState(false)\n  const localData = useLocalStorage(dataKey)\n  const [values, setValues] = useState(Array(min).fill(\"\"))\n  const onWarningClose = (event: React.SyntheticEvent<Element, Event>) => {\n    setWarning(false)\n  }\n\n  const onAddClick = () => {\n    setValues([...values, \"\"])\n  }\n  const onRemoveClick = () => {\n    if (values.length > min) {\n      setValues(values.slice(0, values.length - 1))\n    } else {\n      setWarning(true)\n    }\n  }\n  const onHelpClick = () => {\n    setHelpOpen(true)\n  }\n\n  const setNameByIndex = (index: number, value: string) => {\n    setValues(values.map((prev, i) => (i === index ? value : prev)))\n  }\n  const handleHelpClose = () => {\n    setHelpOpen(false)\n  }\n\n  // For Debug\n  useEffect(() => {\n    console.log(dataKey)\n    console.log(values)\n    localData.set(values)\n  }, [values])\n\n  return (\n    <Paper elevation={3} className={classes.paper}>\n      <Grid container spacing={2} direction=\"column\">\n        <Grid item>\n          <Box className={classes.box}>\n            <Typography variant=\"h6\" className={classes.title}>\n              {title}\n            </Typography>\n            <IconButtonWithTooltip title=\"추가\" onClick={onAddClick} icon={<AddIcon />} />\n            <IconButtonWithTooltip title=\"삭제\" onClick={onRemoveClick} icon={<RemoveIcon />} />\n            <IconButtonWithTooltip title=\"도움말\" onClick={onHelpClick} icon={<HelpOutlineIcon />} />\n            {description && (\n              <HelpDialog open={helpOpen} handleClose={handleHelpClose} title={`${title}`} text={description} />\n            )}\n          </Box>\n        </Grid>\n        {Array.from(values).map((value, index) => (\n          <TextInput key={`name_${index}`} label={label} value={value} setName={setNameByIndex} index={index} />\n        ))}\n      </Grid>\n      <Snackbar open={warning} autoHideDuration={3000} onClose={onWarningClose}>\n        <Alert onClose={onWarningClose} severity=\"warning\" elevation={6} variant=\"filled\">\n          최소 {min}개의 {label}이 필요합니다.\n        </Alert>\n      </Snackbar>\n    </Paper>\n  )\n}\nexport default TextInputs\n","import React, { useEffect, useState } from \"react\"\nimport { Box, Grid, Paper, Typography } from \"@material-ui/core\"\nimport DateFnsUtils from \"@date-io/date-fns\"\nimport koLocale from \"date-fns/locale/ko\"\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\"\nimport { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\"\nimport HelpDialog from \"./HelpDialog\"\n\n//Hooks\nimport useStyles from \"hooks/useStyles\"\n\n// Icon\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\nimport IconButtonWithTooltip from \"components/IconButtonWithTooltip\"\nimport useLocalStorage from \"hooks/useLocalStorage\"\n\ninterface DurationInputProps {\n  dataKey: string\n}\n\nconst DurationInput = ({ dataKey }: DurationInputProps) => {\n  const classes = useStyles()\n  const [helpOpen, setHelpOpen] = useState(false)\n  const [start, setStart] = useState<any>(new Date())\n  const [end, setEnd] = useState<any>(new Date())\n  const localDataStart = useLocalStorage(`${dataKey}Start`)\n  const localDataEnd = useLocalStorage(`${dataKey}End`)\n\n  const onStartChange = (date: MaterialUiPickersDate) => {\n    setStart(date)\n  }\n  const onEndChange = (date: MaterialUiPickersDate) => {\n    setEnd(date)\n  }\n\n  const onHelpClick = () => {\n    setHelpOpen(true)\n  }\n\n  const handleHelpClose = () => {\n    setHelpOpen(false)\n  }\n\n  useEffect(() => {\n    localDataStart.set(start)\n    localDataEnd.set(end)\n  }, [start, end])\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={koLocale}>\n      <Paper elevation={3} className={classes.paper}>\n        <Grid container spacing={2} direction=\"column\">\n          <Grid item>\n            <Box className={classes.box}>\n              <Typography variant=\"h6\" className={classes.title}>\n                기간 입력\n              </Typography>\n              <IconButtonWithTooltip title=\"도움말\" onClick={onHelpClick} icon={<HelpOutlineIcon />} />\n              <HelpDialog\n                open={helpOpen}\n                handleClose={handleHelpClose}\n                title=\"기간 설정\"\n                text=\"시작 날짜와 종료 날짜를 선택합니다. 시작 날짜는 종료 날짜보다 이전이어야 하며, 종료 날짜는 시작 날짜보다 이후여야 합니다.\"\n              />\n            </Box>\n          </Grid>\n          <Grid item>\n            <DatePicker\n              label=\"시작 날짜\"\n              disablePast\n              maxDate={end}\n              value={start}\n              onChange={onStartChange}\n              animateYearScrolling\n            />\n          </Grid>\n          <Grid item>\n            <DatePicker\n              disablePast\n              label=\"종료 날짜\"\n              minDate={start}\n              value={end}\n              onChange={onEndChange}\n              animateYearScrolling\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </MuiPickersUtilsProvider>\n  )\n}\nexport default DurationInput\n","import { Grid } from \"@material-ui/core\"\nimport TextInputs from \"components/TextInputs\"\nimport DurationInput from \"components/DurationInput\"\nimport useStyles from \"hooks/useStyles\"\n\nconst Input = () => {\n  const classes = useStyles()\n\n  return (\n    <Grid container justify=\"center\" spacing={2}>\n      <Grid item className={classes.container}>\n        <TextInputs\n          dataKey={\"names\"}\n          min={2}\n          title=\"근무자 명단\"\n          label=\"이름\"\n          description=\"근무를 하게 될 사람들의 이름 목록입니다.\"\n        />\n      </Grid>\n      <Grid item className={classes.container}>\n        <TextInputs dataKey=\"works\" min={1} title=\"근무 종류\" label=\"근무 명\" description=\"모든 근무를 작성합니다..\" />\n      </Grid>\n      <Grid item className={classes.container}>\n        <TextInputs\n          dataKey=\"dayTypes\"\n          min={1}\n          title=\"근무 형태\"\n          label=\"별명\"\n          description=\"토요일, 일요일과 같이 형식이 다른 형태의 근무일이 있는 경우에 여러 근무형태를 작성합니다. ex) 토요일, 일요일, 공휴일 등\"\n        />\n      </Grid>\n      <Grid item className={classes.container}>\n        <DurationInput dataKey=\"duration\" />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default Input\n","import {\n  Accordion,\n  AccordionActions,\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Container,\n  Divider,\n  Typography,\n} from \"@material-ui/core\"\nimport React from \"react\"\n\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport Input from \"routes/Input\"\nimport useStyles from \"hooks/useStyles\"\n\n// Main would merge all the stage it needs to provide the AutoSchedule Service.\n\nconst Main = () => {\n  const classes = useStyles()\n  return (\n    <Container className={classes.padding} maxWidth=\"lg\">\n      {/* Stage 1: getting initial inputs */}\n      <Accordion expanded={true}>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          <Typography variant=\"h5\">기본 정보 입력</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Input />\n        </AccordionDetails>\n        <Divider />\n        <AccordionActions>\n          <Button size=\"small\" color=\"primary\">\n            Next\n          </Button>\n        </AccordionActions>\n      </Accordion>\n      <Accordion expanded={true}>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          <Typography variant=\"h5\">근무일 형태 지정</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Input />\n        </AccordionDetails>\n        <Divider />\n        <AccordionActions>\n          <Button size=\"small\" color=\"primary\">\n            Next\n          </Button>\n        </AccordionActions>\n      </Accordion>\n    </Container>\n  )\n}\n\nexport default Main\n","import React from \"react\"\nimport Header from \"components/Header\"\nimport { createMuiTheme, createStyles, makeStyles, Theme, ThemeProvider } from \"@material-ui/core\"\nimport \"styles/styles.scss\"\nimport Main from \"routes/Main\"\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: \"Noto Sans KR, sans-serif\",\n  },\n})\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    app: {\n      backgroundColor: \"#f0f0f0\",\n      minHeight: \"100vh\",\n    },\n  })\n)\n\nconst App = () => {\n  const classes = useStyles()\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.app}>\n        <Header />\n        <Main />\n      </div>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}