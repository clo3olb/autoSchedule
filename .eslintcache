[{"/home/codespace/workspace/auto-schedule-ts/src/index.tsx":"1","/home/codespace/workspace/auto-schedule-ts/src/App.tsx":"2","/home/codespace/workspace/auto-schedule-ts/src/components/Router.tsx":"3","/home/codespace/workspace/auto-schedule-ts/src/components/Header.tsx":"4","/home/codespace/workspace/auto-schedule-ts/src/routes/Input.tsx":"5","/home/codespace/workspace/auto-schedule-ts/src/components/TextInputs.tsx":"6","/home/codespace/workspace/auto-schedule-ts/src/components/HelpDialog.tsx":"7","/home/codespace/workspace/auto-schedule-ts/src/components/TextInput.tsx":"8","/home/codespace/workspace/auto-schedule-ts/src/components/IconButtonWithTooltip.tsx":"9","/home/codespace/workspace/auto-schedule-ts/src/routes/Main.tsx":"10","/home/codespace/workspace/auto-schedule-ts/src/components/DurationInput.tsx":"11","/home/codespace/workspace/auto-schedule-ts/src/hooks/useStyles.ts":"12","/home/codespace/workspace/auto-schedule-ts/src/hooks/useLocalStorage.ts":"13"},{"size":193,"mtime":1609061252911,"results":"14","hashOfConfig":"15"},{"size":569,"mtime":1609068239167,"results":"16","hashOfConfig":"15"},{"size":304,"mtime":1609033827687,"results":"17","hashOfConfig":"15"},{"size":1626,"mtime":1609069312962,"results":"18","hashOfConfig":"15"},{"size":1312,"mtime":1609063706934,"results":"19","hashOfConfig":"15"},{"size":3123,"mtime":1609063134114,"results":"20","hashOfConfig":"15"},{"size":733,"mtime":1609034062790,"results":"21","hashOfConfig":"15"},{"size":941,"mtime":1609061509364,"results":"22","hashOfConfig":"15"},{"size":493,"mtime":1609038114166,"results":"23","hashOfConfig":"15"},{"size":624,"mtime":1609068417215,"results":"24","hashOfConfig":"15"},{"size":2934,"mtime":1609063876357,"results":"25","hashOfConfig":"15"},{"size":867,"mtime":1609069046376,"results":"26","hashOfConfig":"15"},{"size":506,"mtime":1609063858509,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ex2g4z",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/codespace/workspace/auto-schedule-ts/src/index.tsx",[],["58","59"],"/home/codespace/workspace/auto-schedule-ts/src/App.tsx",["60"],"/home/codespace/workspace/auto-schedule-ts/src/components/Router.tsx",[],["61","62"],"/home/codespace/workspace/auto-schedule-ts/src/components/Header.tsx",["63","64"],"/home/codespace/workspace/auto-schedule-ts/src/routes/Input.tsx",[],"/home/codespace/workspace/auto-schedule-ts/src/components/TextInputs.tsx",["65"],"import React, { useEffect, useState } from \"react\"\nimport { Box, Grid, Paper, Snackbar, Typography } from \"@material-ui/core\"\nimport Alert from \"@material-ui/lab/Alert\"\n\n// Icons\nimport AddIcon from \"@material-ui/icons/Add\"\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\nimport RemoveIcon from \"@material-ui/icons/Remove\"\n\n// Components\nimport HelpDialog from \"components/HelpDialog\"\nimport TextInput from \"components/TextInput\"\nimport IconButtonWithTooltip from \"components/IconButtonWithTooltip\"\n\n// Hooks\nimport useStyles from \"hooks/useStyles\"\nimport useLocalStorage from \"hooks/useLocalStorage\"\n\ninterface TextInputsProps {\n  min?: number\n  title: string\n  label: string\n  description?: string\n  dataKey: string //Key for localStorage Values\n}\n\nconst TextInputs = ({ min = 1, title, label, description = \"\", dataKey }: TextInputsProps) => {\n  console.log({ min, dataKey, title, label })\n  const classes = useStyles()\n  const [warning, setWarning] = useState(false)\n  const [helpOpen, setHelpOpen] = useState(false)\n  const localData = useLocalStorage(dataKey)\n  const [values, setValues] = useState(Array(min).fill(\"\"))\n  const onWarningClose = (event: React.SyntheticEvent<Element, Event>) => {\n    setWarning(false)\n  }\n\n  const onAddClick = () => {\n    setValues([...values, \"\"])\n  }\n  const onRemoveClick = () => {\n    if (values.length > min) {\n      setValues(values.slice(0, values.length - 1))\n    } else {\n      setWarning(true)\n    }\n  }\n  const onHelpClick = () => {\n    setHelpOpen(true)\n  }\n\n  const setNameByIndex = (index: number, value: string) => {\n    setValues(values.map((prev, i) => (i === index ? value : prev)))\n  }\n  const handleHelpClose = () => {\n    setHelpOpen(false)\n  }\n\n  // For Debug\n  useEffect(() => {\n    console.log(dataKey)\n    console.log(values)\n    localData.set(values)\n  }, [values])\n\n  return (\n    <Paper elevation={3} className={classes.paper}>\n      <Grid container spacing={2} direction=\"column\">\n        <Grid item>\n          <Box className={classes.box}>\n            <Typography variant=\"h6\" className={classes.title}>\n              {title}\n            </Typography>\n            <IconButtonWithTooltip title=\"추가\" onClick={onAddClick} icon={<AddIcon />} />\n            <IconButtonWithTooltip title=\"삭제\" onClick={onRemoveClick} icon={<RemoveIcon />} />\n            <IconButtonWithTooltip title=\"도움말\" onClick={onHelpClick} icon={<HelpOutlineIcon />} />\n            {description && (\n              <HelpDialog open={helpOpen} handleClose={handleHelpClose} title={`${title}`} text={description} />\n            )}\n          </Box>\n        </Grid>\n        {Array.from(values).map((value, index) => (\n          <TextInput key={`name_${index}`} label={label} value={value} setName={setNameByIndex} index={index} />\n        ))}\n      </Grid>\n      <Snackbar open={warning} autoHideDuration={3000} onClose={onWarningClose}>\n        <Alert onClose={onWarningClose} severity=\"warning\" elevation={6} variant=\"filled\">\n          최소 {min}개의 {label}이 필요합니다.\n        </Alert>\n      </Snackbar>\n    </Paper>\n  )\n}\nexport default TextInputs\n","/home/codespace/workspace/auto-schedule-ts/src/components/HelpDialog.tsx",[],"/home/codespace/workspace/auto-schedule-ts/src/components/TextInput.tsx",[],"/home/codespace/workspace/auto-schedule-ts/src/components/IconButtonWithTooltip.tsx",[],"/home/codespace/workspace/auto-schedule-ts/src/routes/Main.tsx",[],"/home/codespace/workspace/auto-schedule-ts/src/components/DurationInput.tsx",["66"],"import React, { useEffect, useState } from \"react\"\nimport { Box, Grid, Paper, Typography } from \"@material-ui/core\"\nimport DateFnsUtils from \"@date-io/date-fns\"\nimport koLocale from \"date-fns/locale/ko\"\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\"\nimport { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\"\nimport HelpDialog from \"./HelpDialog\"\n\n//Hooks\nimport useStyles from \"hooks/useStyles\"\n\n// Icon\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\nimport IconButtonWithTooltip from \"components/IconButtonWithTooltip\"\nimport useLocalStorage from \"hooks/useLocalStorage\"\n\ninterface DurationInputProps {\n  dataKey: string\n}\n\nconst DurationInput = ({ dataKey }: DurationInputProps) => {\n  const classes = useStyles()\n  const [helpOpen, setHelpOpen] = useState(false)\n  const [start, setStart] = useState<any>(new Date())\n  const [end, setEnd] = useState<any>(new Date())\n  const localDataStart = useLocalStorage(`${dataKey}Start`)\n  const localDataEnd = useLocalStorage(`${dataKey}End`)\n\n  const onStartChange = (date: MaterialUiPickersDate) => {\n    setStart(date)\n  }\n  const onEndChange = (date: MaterialUiPickersDate) => {\n    setEnd(date)\n  }\n\n  const onHelpClick = () => {\n    setHelpOpen(true)\n  }\n\n  const handleHelpClose = () => {\n    setHelpOpen(false)\n  }\n\n  useEffect(() => {\n    localDataStart.set(start)\n    localDataEnd.set(end)\n  }, [start, end])\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={koLocale}>\n      <Paper elevation={3} className={classes.paper}>\n        <Grid container spacing={2} direction=\"column\">\n          <Grid item>\n            <Box className={classes.box}>\n              <Typography variant=\"h6\" className={classes.title}>\n                기간 입력\n              </Typography>\n              <IconButtonWithTooltip title=\"도움말\" onClick={onHelpClick} icon={<HelpOutlineIcon />} />\n              <HelpDialog\n                open={helpOpen}\n                handleClose={handleHelpClose}\n                title=\"기간 설정\"\n                text=\"시작 날짜와 종료 날짜를 선택합니다. 시작 날짜는 종료 날짜보다 이전이어야 하며, 종료 날짜는 시작 날짜보다 이후여야 합니다.\"\n              />\n            </Box>\n          </Grid>\n          <Grid item>\n            <DatePicker\n              label=\"시작 날짜\"\n              disablePast\n              maxDate={end}\n              value={start}\n              onChange={onStartChange}\n              animateYearScrolling\n            />\n          </Grid>\n          <Grid item>\n            <DatePicker\n              disablePast\n              label=\"종료 날짜\"\n              minDate={start}\n              value={end}\n              onChange={onEndChange}\n              animateYearScrolling\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </MuiPickersUtilsProvider>\n  )\n}\nexport default DurationInput\n","/home/codespace/workspace/auto-schedule-ts/src/hooks/useStyles.ts",[],"/home/codespace/workspace/auto-schedule-ts/src/hooks/useLocalStorage.ts",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":3,"column":31,"nodeType":"73","messageId":"74","endLine":3,"endColumn":35},{"ruleId":"67","replacedBy":"75"},{"ruleId":"69","replacedBy":"76"},{"ruleId":"71","severity":1,"message":"77","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":13},{"ruleId":"71","severity":1,"message":"78","line":22,"column":9,"nodeType":"73","messageId":"74","endLine":22,"endColumn":20},{"ruleId":"79","severity":1,"message":"80","line":64,"column":6,"nodeType":"81","endLine":64,"endColumn":14,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":47,"column":6,"nodeType":"81","endLine":47,"endColumn":18,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"@typescript-eslint/no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar",["85"],["86"],"'Box' is defined but never used.","'handleReset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataKey' and 'localData'. Either include them or remove the dependency array.","ArrayExpression",["87"],"React Hook useEffect has missing dependencies: 'localDataEnd' and 'localDataStart'. Either include them or remove the dependency array.",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [dataKey, localData, values]",{"range":"93","text":"94"},"Update the dependencies array to be: [start, end, localDataStart, localDataEnd]",{"range":"95","text":"96"},[1835,1843],"[dataKey, localData, values]",[1406,1418],"[start, end, localDataStart, localDataEnd]"]